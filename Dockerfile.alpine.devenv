FROM golang:alpine

RUN apk add --no-cache musl-dev git bash upx

RUN mkdir -p /hubfiles && git clone \
  --config transfer.fsckobjects=false \
  --config receive.fsckobjects=false \
  --config fetch.fsckobjects=false \
  --depth 1 \
  https://github.com/github/hub.git /usr/src/hub

WORKDIR /usr/src/hub

RUN script/build -o /hubfiles/hub

RUN upx /hubfiles/hub

FROM alpine

COPY --from=0 /hubfiles/hub /usr/bin/hub

FROM golang:alpine

ARG CLOUD_SDK_VERSION=310.0.0
ENV CLOUD_SDK_VERSION=$CLOUD_SDK_VERSION
ENV PATH /google-cloud-sdk/bin:$PATH

RUN set -e &&\
  apk add --no-cache zsh zsh-vcs git gnupg sudo util-linux shadow vim curl tar gzip ctags ncurses jq bash mailcap tzdata ca-certificates \
    python3 python3-dev py3-pip openssl less py-crcmod docker tini nodejs nodejs-dev yarn npm ruby cmake redis hiredis-dev postgresql-client \
    build-base terraform fzf fzf-zsh-completion libc6-compat openssh-client sed grep   &&\
  curl -fsSL https://starship.rs/install.sh | bash -s -- -y &&\
  curl -o /usr/bin/prettyping -L https://raw.githubusercontent.com/denilsonsa/prettyping/master/prettyping &&\
  chmod +x /usr/bin/prettyping &&\
  curl -o /usr/bin/direnv -L'#' $(curl -s https://api.github.com/repos/direnv/direnv/releases/latest | jq -r '.assets[] | select(.name | contains("linux-amd64")) | .browser_download_url') &&\
  chmod +x /usr/bin/direnv &&\
  mkdir -p /tmp/bat &&\
  curl -sL $(curl -s https://api.github.com/repos/sharkdp/bat/releases/latest | jq -r '.assets[] | select(.name | contains("x86_64-unknown-linux-musl.tar.gz") and contains("bat-")) | .browser_download_url') | tar -C /tmp/bat --strip-components 1 -xz &&\
  mv /tmp/bat/bat /usr/bin/bat &&\
  rm -rf /tmp/bat &&\
  mkdir -p /tmp/exa &&\
  curl -o /tmp/exa/exa.zip -L $(curl -s https://api.github.com/repos/ogham/exa/releases/latest | jq -r '.assets[] | select(.name | contains("exa-linux")) | .browser_download_url') &&\
  cd /tmp/exa &&\
  unzip -d . exa.zip &&\
  mv exa-linux-x86_64 /usr/bin/exa &&\
  cd / &&\
  rm -rf /tmp/exa &&\
  curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl &&\
  chmod +x ./kubectl &&\
  mv kubectl /usr/bin/ &&\
  ln -sf /usr/bin/kubectl /usr/bin/k &&\
  cd / &&\  
  rm -rf /go/src/github.com/github &&\
  npm install -g npm@latest &&\
  npm install -g diff-so-fancy jshint jslint jsonlint tidy-markdown js-yaml &&\
  gem install mdl &&\
  pip3 install -U awscli &&\
  curl -sL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz | tar -xz && \
  ln -s /lib /lib64 &&\
  useradd -m -s /bin/zsh ivan &&\
  mkdir -p /etc/sudoers.d &&\
  echo "ivan ALL = (ALL) NOPASSWD: ALL" > /etc/sudoers.d/ivan &&\
  echo 'wheel ALL = (ALL) NOPASSWD: ALL' > /etc/sudoers.d/wheel &&\
  chmod 0400 /etc/sudoers.d/ivan /etc/sudoers.d/wheel &&\
  rm -rf /tmp/*

USER ivan
ADD --chown=ivan zshrc /home/ivan/.zshrc
ADD --chown=ivan gitconfig /home/ivan/.gitconfig
ADD --chown=ivan ctags /home/ivan/.ctags
ADD --chown=ivan zshrc.docker /home/ivan/.zshrc.local
WORKDIR /home/ivan

RUN \
  zsh -c "source /home/ivan/.zshrc" && \
  gcloud config set core/disable_usage_reporting true && \
  gcloud config set component_manager/disable_update_check true && \
  gcloud config set metrics/environment github_docker_image && \
  gcloud --version

VOLUME ["/home/ivan/.config"]


ENV PATH "/home/ivan/go/bin:$PATH"
SHELL [ "/bin/zsh", "-c" ]
CMD ["zsh"]
