FROM debian:testing-slim

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update -qq &&\
  apt-get install -yqq git build-essential &&\
  git clone https://github.com/ncopa/su-exec /usr/src/su-exec &&\
  cd /usr/src/su-exec &&\
  LDFLAGS="-s -w" make su-exec-static

ADD zshrc /extra/zshrc
ADD zshrc.container.patch /extra/zshrc.patch
WORKDIR /extra
RUN git apply zshrc.patch
  
FROM debian:testing-slim

ENV DEBIAN_FRONTEND noninteractive

COPY --from=0 /usr/src/su-exec/su-exec-static /usr/bin/su-exec

ARG CLOUD_SDK_VERSION=236.0.0
ENV CLOUD_SDK_VERSION=$CLOUD_SDK_VERSION
ENV PATH /google-cloud-sdk/bin:$PATH

RUN echo "deb http://deb.debian.org/debian testing main contrib non-free" > /etc/apt/sources.list &&\ 
  apt-get update -qq &&\
	apt-get full-upgrade -yqq &&\
  apt-get install -yqq curl apt-transport-https zsh git sudo gnupg curl pv httpie zsh  tmux exuberant-ctags ncurses-term direnv ruby jq git-hub iputils-ping gawk &&\
  curl -o /usr/bin/prettyping -L --progress https://raw.githubusercontent.com/denilsonsa/prettyping/master/prettyping &&\
  chmod +x /usr/bin/prettyping &&\
  curl -o /tmp/bat.deb -L --progress $(curl -s https://api.github.com/repos/sharkdp/bat/releases/latest | jq -r '.assets[] | select(.name | contains("amd64.deb") and contains("bat_")) | .browser_download_url') &&\
  dpkg -i /tmp/bat.deb &&\
  curl -sL https://deb.nodesource.com/setup_10.x | bash - &&\
  curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&\
  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - &&\
  echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list &&\
  echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list &&\
  apt-get update -qq &&\
  apt-get install -yqq nodejs build-essential yarn kubectl neovim python-dev ruby-dev python3-dev python3-pip cmake python-dev python-pip clang libclang-dev &&\
  npm install -g diff-so-fancy jshint jslint jsonlint tidy-markdown js-yaml neovim &&\
	gem install neovim &&\
	pip install pynvim awscli &&\
	pip3 install pynvim awscli &&\
  curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash &&\
  curl -sL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz | tar -C / -xz && \
  ln -s /lib /lib64 &&\
  useradd -m -s /bin/zsh ivan &&\
  mkdir -p /etc/sudoers.d &&\
  echo "ivan ALL = (ALL) NOPASSWD: ALL" > /etc/sudoers.d/ivan &&\
  echo 'wheel ALL = (ALL) NOPASSWD: ALL' > /etc/sudoers.d/wheel &&\
  chmod 0400 /etc/sudoers.d/ivan /etc/sudoers.d/wheel &&\
  curl -sL https://dl.google.com/go/$(curl --silent https://golang.org/doc/devel/release.html | grep -Eo 'go[0-9]+(\.[0-9]+)+' | sort -V | uniq | tail -1).linux-amd64.tar.gz | tar -C /usr/local -xz &&\
  echo 'Cleaning up' && \
  apt-get autoremove -yqq &&\
  apt-get clean -y &&\
  apt-get autoclean -yqq &&\
  rm -rf  /tmp/* /var/tmp/* /var/lib/apt/lists/* /usr/share/doc/* /usr/share/locale/* /var/cache/debconf/*-old

ENV TINI_VERSION v0.18.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static-amd64 /tmp/tini-static-amd64
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static-amd64.asc /tmp/tini-static-amd64.asc

# try a few keyservers, sometimes they fail
RUN for key in \
      595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \
    ; do \
      gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" || \
      gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
      gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" ; \
    done \
    &&\
    gpg --verify /tmp/tini-static-amd64.asc &&\
    install -m 0755 /tmp/tini-static-amd64 /bin/tini

ENV PATH "/usr/local/go/bin:$PATH"

USER ivan
COPY --from=0 --chown=ivan /extra/zshrc /home/ivan/.zshrc
ADD --chown=ivan gitconfig /home/ivan/.gitconfig
ADD --chown=ivan ctags /home/ivan/.ctags
ADD --chown=ivan vimreboot /home/ivan/.vim
ADD --chown=ivan nvim /home/ivan/.config/nvim
WORKDIR /home/ivan

RUN \
  zsh -c "source /home/ivan/.zshrc" &&\
  ln -sf /home/ivan/.vim/init.vim /home/ivan/.vimrc &&\
  echo "Installing Vim Plugins" &&\
	nvim +'PlugInstall --sync' +qall >/dev/null

ENV PATH "/home/ivan/go/bin:$PATH"

SHELL [ "/bin/zsh", "-c" ]
ENTRYPOINT [ "/bin/tini", "--" ]
CMD ["zsh"]
